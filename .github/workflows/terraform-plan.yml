name: Terraform Plan

on:
  push:
    branches:
      - "**"

permissions:
  id-token: write
  contents: read
  actions: write

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}

jobs:
  plan:
    name: Terraform Plan with Security Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/Github_Role_Demo
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: |
          echo "Initializing Terraform..."
          terraform init

      - name: Terraform Format Check
        run: |
          echo "Running terraform fmt -check -recursive..."
          terraform fmt -check -recursive

      - name: Terraform Validate
        run: |
          echo "Running terraform validate..."
          terraform validate

      - name: Install tfsec
        run: |
          echo "Installing tfsec..."
          curl -sSL https://github.com/aquasecurity/tfsec/releases/download/v1.28.0/tfsec-linux-amd64 -o /usr/local/bin/tfsec
          chmod +x /usr/local/bin/tfsec
          tfsec --version

      - name: Run tfsec
        run: |
          echo "Running tfsec..."
          if [ -f "terraform.tfvars" ]; then
            tfsec --tfvars-file=terraform.tfvars .
          else
            tfsec .
          fi

      - name: Terraform Plan
        run: terraform plan -out=tfplan

      - name: Upload Plan Artifact
        id: upload_artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan-${{ github.ref_name }}
          path: tfplan

      - name: Get Artifact ID
        id: get_artifact
        run: |
          echo "Fetching artifact ID for branch: ${{ github.ref_name }}"

          response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts")

          artifact_id=$(echo "$response" | jq -r '.artifacts[] | select(.name=="tfplan-${{ github.ref_name }}") | .id')

          if [ -z "$artifact_id" ]; then
            echo "Error: Artifact ID not found!"
            exit 1
          fi

          # Store artifact ID in GITHUB_ENV but only log the first 8 characters
          echo "artifact_id=$artifact_id" >> $GITHUB_ENV
          echo "branch_name=${{ github.ref_name }}" >> $GITHUB_ENV

      - name: Output Minimal Info
        run: |
          echo "Branch: ${{ env.branch_name }}"
          echo "Artifact ID (First 8 chars only): ${artifact_id:0:8}"
