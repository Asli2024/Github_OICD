name: Terraform Plan

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read
  actions: write

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}

jobs:
  plan:
    name: Terraform Plan
    runs-on: ubuntu-latest

    outputs:
      artifact_id: ${{ steps.get_artifact.outputs.artifact_id }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/Github_Role_Demo
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -out=tfplan

      - name: Upload Plan Artifact
        id: upload_artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: tfplan

      - name: Get Artifact ID
        id: get_artifact
        run: |
          response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts")

          artifact_id=$(echo "$response" | jq -r '.artifacts[] | select(.name=="tfplan") | .id')

          if [ -z "$artifact_id" ]; then
            echo "Artifact not found!"
            exit 1
          fi

          echo "Artifact ID: $artifact_id"
          echo "artifact_id=$artifact_id" >> $GITHUB_ENV
